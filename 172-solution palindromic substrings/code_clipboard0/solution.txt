def count_palindromic_substrings(s):
    count = 0

    dp = [[False for i in range(len(s))] for i in range(len(s))]
    
    for i in range(len(s)):
        dp[i][i] = True
        count += 1

    for i in range(len(s)-1):
        dp[i][i + 1] = (s[i] == s[i + 1])
        count += dp[i][i + 1]

    for length in range(3, len(s)+1):
        i = 0
        for j in range(length - 1, len(s)):
            dp[i][j] = dp[i + 1][j - 1] and (s[i] == s[j])
            count += dp[i][j]
            i += 1
    
    return count

# Driver code
def main():
    strings = ['cat', 'lever', 'xyxxyz', 'wwwwwwwwww', 'tattarrattat']
    
    for i in range(len(strings)):
        print(i + 1, ".\t Input string: '", strings[i], "'", sep="")
        result = count_palindromic_substrings(strings[i])
        print("\t Number of palindromic substrings: ", result, sep="")
        print("-" * 100)
    
if __name__ == '__main__':
    main()