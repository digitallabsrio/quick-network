from print_tic_tac_toe import print_tic_tac_toe
from print_tic_tac_toe import print_board_states

class TicTacToe:
    # TicTacToe class contains rows, cols, diagonal,
    # and anti_diagonal to create a board.
    # Constructor is used to create board of size n * n.
    def __init__(self, n):
        self.rows = [0] * (n)
        self.cols = [0] * (n)

        # self.board is only used for printing purposes
        self.board = [["-" for _ in range(n)] for _ in range(n)] # initializing the board for printing
        print_tic_tac_toe(self.board, n)

        print("Initial state of counters:")
        print_board_states(self)

    # move function will allow the players to play the game
    # by placing their mark at the row and col of their choice.
    def move(self, row, col, player):
        current_player = -1
        if player == 1:
            current_player = 1
        
        n = len(self.rows)

        self.rows[row] += current_player
        self.cols[col] += current_player
  
        if current_player == 1:
            self.board[row][col] = "O"
        else:
            self.board[row][col] = "X"

        print("\n\nUpdated state:", end="")
        print_tic_tac_toe(self.board, len(self.rows))
        print_board_states(self)

        if abs(self.rows[row]) == n or abs(self.cols[col]) == n:
            return player
        return 0

# Driver code
def main():
    n = 3
    inputs = [  [[0, 1, 1], [1, 0, 2], [2, 1, 1], [1, 2, 2], [0, 2, 1], [2, 2, 2], [1, 1, 1]], 
                [[0, 0, 1], [0, 2, 2], [2, 2, 1], [1, 1, 2], [1, 0, 1], [2, 0, 2], [1, 2, 1]] ]
    
    for game in range(2):
        fill_grid = []
        print("Game ",(game+1), ": \n", sep="")
        print("Initial state of", n, "X", n, "Tic-Tac-Toe board:", end="")
        tic_tac_toe_obj = TicTacToe(n)
        win = 0
        for i in range(0, len(inputs[game])):
            print("\nMove ", (i+1), ":\tPlayer ", inputs[game][i][2], " places their mark at ", inputs[game][i][0], ", ", inputs[game][i][1] , sep="", end="")

            win = tic_tac_toe_obj.move(inputs[game][i][0], inputs[game][i][1], inputs[game][i][2])

            if (win == 0):
                print("\tNo one wins the game")
                print("-" * 100)
            else:
                print("\tPlayer", win, "wins the game")
                print("-" * 100)
                break


if __name__ == '__main__':
    main()